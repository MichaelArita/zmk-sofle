#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    Mo_StickTap: Mo_StickTap {
        compatible = "zmk,behavior-hold-tap";
        label = "Momentary Hold, Sticky Layer Tap";
        bindings = <&mo>, <&sl>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
    };

    Browser_Tabs: Browser_Tabs {
        compatible = "zmk,behavior-tap-dance";
        label = "BROWSER_TABS";
        #binding-cells = <0>;
        bindings = <&kp LC(W)>, <&mt LC(LS(T)) LC(T)>;
    };

    backspace: backspace {
        compatible = "zmk,behavior-tap-dance";
        label = "BACKSPACE";
        #binding-cells = <0>;
        bindings = <&kp BACKSPACE>, <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;
    };

    fancyzones: fancyzones {
        compatible = "zmk,behavior-tap-dance";
        label = "FANCYZONES";
        #binding-cells = <0>;
        bindings = <&kp LEFT_GUI>, <&kp LC(LA(LEFT_GUI))>;
    };

    modTapDance: modTapDance {
        compatible = "zmk,behavior-tap-dance";
        label = "MODTAPDANCE";
        #binding-cells = <0>;
        bindings = <&mo 1>, <&none>, <&mo 5>;
    };

    hml: Home_row_mod_left {
        compatible = "zmk,behavior-hold-tap";
        label = "Home_row_mod_left";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <240>;
        flavor = "balanced";
        require-prior-idle-ms = <125>;
        quick-tap-ms = <175>;
        hold-trigger-key-positions = <20 21 22 23 24 46 33 34 47 48 35 36 49 50 37 7 9 10 8 11 12 25 38 51 59 61 62 63>;
        hold-trigger-on-release;
    };

    hmr: home_row_mod_right {
        compatible = "zmk,behavior-hold-tap";
        label = "home_row_mod_right";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <240>;
        require-prior-idle-ms = <123>;
        quick-tap-ms = <175>;
        flavor = "balanced";
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57>;
        hold-trigger-on-release;
    };

    combos {
        compatible = "zmk,combos";

        AdjusmentLayer {
            bindings = <&mo 4>;
            key-positions = <56 60>;
        };

        bracketLeft {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 18>;
        };

        bracketRight {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <20 21>;
        };

        parenLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <31 30>;
        };

        parenRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <33 34>;
        };

        braceLeft {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <43 44>;
        };

        braceRight {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <46 47>;
        };

        modRowLSHIFT {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <30 29>;
        };

        modRowRSHIFT {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <34 35>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <13 14>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&mt TILDE GRAVE   &kp N1           &kp N2           &kp N3             &kp N4               &kp N5       &msc MOVE_Y(20)   &kp N6     &kp N7                &kp N8              &kp N9            &kp N0               &trans
&kp TAB           &kp Q            &kp W            &kp E              &kp R                &kp T        &msc MOVE_Y(-20)  &kp Y      &kp U                 &kp I               &kp O             &kp P                &mt LC(BACKSPACE) BACKSPACE
&kp LEFT_CONTROL  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LEFT_CONTROL F  &kp G        &msc MOVE_X(20)   &kp H      &hmr RIGHT_CONTROL J  &hmr RIGHT_SHIFT K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMI  &kp APOS
&kp LEFT_SHIFT    &kp Z            &kp X            &kp C              &kp V                &kp B        &msc MOVE_X(20)   &kp N      &kp M                 &kp COMMA           &kp DOT           &kp FSLH             &kp RIGHT_CONTROL
&kp C_MUTE        &kp LCTRL        &kp LEFT_GUI     &kp LEFT_ALT       &modTapDance         &kp SPACE    &kp ENTER         &kp ENTER  &mo 2                 &kp RIGHT_SHIFT     &kp RIGHT_GUI     &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            display-name = "Base Layer";
        };

        UtilityKeys {
            bindings = <
&kp F1      &kp F2     &kp F3            &kp F4           &kp F5        &kp F6                 &mmv MOVE_UP     &kp F7           &kp F8    &kp F9    &kp F10    &kp F11  &kp F12
&trans      &trans     &Browser_Tabs     &kp LC(LS(TAB))  &kp LC(TAB)   &mt LC(LS(N)) LC(N)    &mmv MOVE_DOWN   &kp PG_UP        &kp HOME  &kp UP    &kp END    &trans   &kp DELETE
&trans      &kp LC(A)  &kp LEFT_CONTROL  &fancyzones      &kp LEFT_ALT  &kp CAPS               &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &trans
&trans      &kp LC(Z)  &kp LC(X)         &kp LC(C)        &kp LC(V)     &trans                 &mmv MOVE_RIGHT  &kp PRINTSCREEN  &trans    &trans    &trans     &trans   &trans
&kp C_MUTE  &trans     &trans            &trans           &trans        &trans                 &mkp LCLK        &trans           &trans    &trans    &trans     &trans
            >;

            display-name = "Utility Layer";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        NumberSymbol {
            bindings = <
&kp F13     &kp F14          &kp F15      &kp F16   &kp F17         &kp F18            &mmv MOVE_UP    &kp F19           &kp F20            &kp F21        &kp F22               &kp F23                &kp F24
&trans      &kp N1           &kp N2       &kp N3    &kp N4          &kp N5             &mmv MOVE_DOWN  &kp N6            &kp N7             &kp N8         &kp N9                &kp N0                 &trans
&trans      &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR      &kp PERCENT        &kp C_PREV      &kp CARET         &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans      &kp EQUAL        &kp MINUS    &kp PLUS  &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp C_NEXT      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON  &kp COLON             &kp BACKSLASH          &trans
&kp C_MUTE  &kp UNDERSCORE   &trans       &kp TAB   &trans          &trans             &kp C_PP        &trans            &trans             &trans         &kp COMMA             &kp PERIOD
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Number and Symbol Layer";
        };

        Numpad {
            bindings = <
&to 0       &trans         &trans        &trans        &trans        &trans       &mmv MOVE_UP     &trans  &trans  &trans  &trans  &trans  &trans
&kp ENTER   &kp BACKSLASH  &kp N7        &kp N8        &kp N9        &trans       &mmv MOVE_DOWN   &trans  &trans  &trans  &trans  &trans  &trans
&trans      &kp SLASH      &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS    &mmv MOVE_LEFT   &trans  &trans  &trans  &trans  &trans  &trans
&trans      &kp ASTERISK   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS     &mmv MOVE_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&kp C_MUTE  &kp N0         &kp TAB       &kp PERIOD    &trans        &trans       &mkp LCLK        &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Numpad Layer";
        };

        Settings {
            bindings = <
&out OUT_TOG  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &rgb_ug RGB_TOG  &caps_word  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans  &trans
&trans        &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans          &trans  &trans           &trans      &trans           &trans           &trans  &trans
&trans        &trans          &trans        &trans        &trans        &trans          &trans  &trans           &trans      &trans           &trans           &trans  &trans
&to 3         &trans          &trans        &trans        &sys_reset    &bootloader     &trans  &bootloader      &sys_reset  &trans           &trans           &trans  &trans
&trans        &trans          &trans        &trans        &trans        &trans          &trans  &trans           &trans      &trans           &trans           &trans
            >;

            label = "Settings and Navigation Layer";
        };

        layer_6 {
            display-name = "Base Layer";
            bindings = <
&mt TILDE GRAVE  &kp N0     &kp N9    &kp N8     &kp N7  &kp N6       &msc MOVE_Y(20)   &kp N6     &kp N7  &kp N8           &kp N9         &kp N0      &trans
&kp BSPC         &kp P      &kp O     &kp I      &kp U   &kp Y        &msc MOVE_Y(-20)  &kp Y      &kp U   &kp I            &kp O          &kp P       &mt LC(BACKSPACE) BACKSPACE
&kp RCTRL        &kp SEMI   &kp L     &kp K      &kp J   &kp H        &msc MOVE_X(20)   &kp H      &kp J   &kp K            &kp L          &kp SEMI    &kp APOS
&kp RSHFT        &kp FSLH   &kp DOT   &kp COMMA  &kp M   &kp N        &msc MOVE_X(20)   &kp N      &kp M   &kp COMMA        &kp DOT        &kp FSLH    &kp RIGHT_CONTROL
&kp C_MUTE       &kp RCTRL  &kp RGUI  &kp RALT   &trans  &kp SPACE    &kp ENTER         &kp ENTER  &mo 2   &kp RIGHT_SHIFT  &kp RIGHT_GUI  &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
